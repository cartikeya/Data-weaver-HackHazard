<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Metadata and external resources -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scraped Data</title>
    <!-- Stylesheets -->
    <link href="index.css" rel="stylesheet" type="text/css" />
    <link href="/URLscraping/urlscraping.css" rel="stylesheet" type="text/css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="index.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/promptscraping/promptscraping.css">
</head>

<body>
    <!-- Loading animation overlay -->
<div id="globalLoader" style="
position: fixed;
top: 0; left: 0;
width: 100vw;
height: 100vh;
background: white;
z-index: 99999;
display: flex;
justify-content: center;
align-items: center;
transition: opacity 0.4s ease;
">
<!-- Replace this with your custom animation -->
<video src="/assets/loading.mp4" autoplay muted loop style="width: 100px;"></video>
</div>
    <!-- Navigation bar -->
    <div class="navbar-no-shadow">
        <div data-animation="default" data-collapse="medium" data-duration="400" data-easing="ease" data-easing2="ease" role="banner" class="navbar-no-shadow-container w-nav">
            <div class="container-regular">
                <div class="navbar-wrapper">
                    <!-- Logo -->
                    <a href="/" class="navbar-brand w-nav-brand">
                        <img src="https://cdn.prod.website-files.com/67f2220a9e19e1e37a55ec03/67f2225ebca552823848f963_DataWeave.png" loading="lazy" width="98" alt="" />
                    </a>
                    <!-- Navigation menu -->
                    <nav role="navigation" class="nav-menu-wrapper w-nav-menu">
                        <ul role="list" class="nav-menu w-list-unstyled">
                            <li class="mobile-margin-top-10">
                                <div class="nav-button-wrapper">
                                    <!-- Navigation buttons -->
                                    <a href="/urlscrape" class="button-primary w-button">URL scraping</a>
                                    <a href="/promptscrape" class="button-primary w-button">Prompt scraping</a>
                                    <a href="/promptscrape" class="button-primary w-button">Dataset Builder</a>
                                </div>
                            </li>
                        </ul>
                    </nav>
                    <!-- Mobile menu button -->
                    <div class="menu-button w-nav-button">
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scraped data container -->
    <div class="scraped-container">
        <!-- Header section -->
        <div class="scraped-data-header">
            <h1>Scraped Data</h1>
            <!-- Favicon image -->
            <img id="site-favicon" src="<%= url %>/favicon.ico" alt="Site Favicon" class="site-favicon">
        </div>
        <!-- Content section -->
         <div class="outputbox">
            <p class="outputcontent"></p>
         </div>
        <div class="scraped-data-content">
            <div readonly class="scraped-data-box"></div>
            <div class="scroll">
                <div class="text">
                    <div class="typing-effect" id="typingEffectContainer">
                        <!-- Typing effect script -->
                        <!-- <script>
                            const scrapedData = `<%- JSON.stringify(data).slice(1, -1) %>`;
                            console.log("scraped data: ",scrapedData);
                        </script> -->
                    </div>
                </div>
            </div>
            <!-- Stop button -->
            <button id="stopButton" class="stop-btn" style="display: block;">
                <i class="fas fa-stop"></i>
            </button>
            <!-- Restart button -->
            <button id="restartButton" class="restart-btn" style="display: none;">
                <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="60" height="60" viewBox="0 0 64 64">
                    <path d="..."></path>
                </svg>
            </button>
        </div>
          
        <!-- Download button -->
        <div>
            <img class="downloadbutton" style="height: 18px; transform: translate(16px, -60px);" src="https://cdn.discordapp.com/attachments/1342832922931101768/1360659984924414043/download_1.png" alt="">
        </div>

        <!-- AI Prompt Section -->
        <div class="container" style="box-shadow: none; padding: 0px ; margin-top: 20px; margin-left: 10px;">
            <label for="url">What do you wanna do with this data? <img src="/assets/imagine1.png" alt="imagine image"></label>
            <textarea id="url" placeholder="eg: " rows="4"></textarea>
            <div style="display: flex; ">
            <a style="margin-top: 10px; border-radius: 5px; height:20px; background-color: rgb(181, 241, 255);  padding: 5px;">Convert to CSV</a>
            <a style="margin-top: 10px;  margin-left: 5px;  height:20px; background-color: rgb(181, 241, 255); padding: 5px;">Convert to JSON</a></div>
            <a style="margin-top: 10px;" class="button-primary w-button createbutton" >Create</a>
        </div>
        <div class="outputbox-prompt"></div>
    </div>

    <!-- JavaScript for functionality -->
    <script type="module">
        document.addEventListener("DOMContentLoaded", function () {
            const createButton = document.querySelector('.createbutton');
            if (createButton) {
                createButton.addEventListener('click', async function (event) {
                    event.preventDefault(); // Prevent default form behavior

                    const userPrompt = document.getElementById("url").value;
                    const scrapedData = `<%- JSON.stringify(data) %>`; // Correctly pass the data as a valid JS object

                    if (!userPrompt || !scrapedData) {
                        alert("Prompt or data missing.");
                        return;
                    }

                    console.log("Sending AI request with:", { prompt: userPrompt, inputText: scrapedData });

                    try {
                        const response = await fetch('/process', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ prompt: userPrompt, inputText: scrapedData })
                        });

                        if (!response.ok) throw new Error("Failed to process the AI request");

                        const result = await response.json();
                        console.log("AI Response:", result);

                        const outputContainer = document.querySelector('.outputbox-prompt');
                        outputContainer.innerHTML = `
                            <h3>User's Question:</h3>
                            <p>${userPrompt}</p>
                            <h3>AI's Response:</h3>
                            <p>${result.output}</p>
                        `;
                    } catch (err) {
                        console.error("Error processing AI request:", err.message);
                        alert("Failed to process the AI request.");
                    }
                });
            } else {
                console.error("Create button not found.");
            }
        });

        // Download button functionality
        const downloadbutton = document.querySelector('.downloadbutton');
        downloadbutton.addEventListener('click', function () {
            const scrapedData = document.querySelector('.scraped-data-box').innerText;
            const blob = new Blob([scrapedData], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'scraped_data.txt';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        });

        // Typing effect functionality
        document.addEventListener("DOMContentLoaded", function () {
            const typingEffectContainer = document.getElementById("typingEffectContainer");
            const stopButton = document.getElementById("stopButton");
            const scrapedData = `<%= data %>`;
            const lines = scrapedData.split("\n");
            const restartButton = document.getElementById("restartButton");

            let currentLine = 0;
            let typingInterval;
            let isStopped = false;

            function typeLine() {
                if (currentLine < lines.length && !isStopped) {
                    const lineElement = document.createElement("div");
                    lineElement.classList.add("typing-line");
                    typingEffectContainer.appendChild(lineElement);

                    let i = 0;
                    function typeCharacter() {
                        if (i < lines[currentLine].length && !isStopped) {
                            lineElement.innerHTML += lines[currentLine].charAt(i);
                            i++;
                            typingInterval = setTimeout(typeCharacter, 5);
                        } else if (!isStopped) {
                            currentLine++;
                            setTimeout(typeLine, 25);
                        }
                    }
                    typeCharacter();
                }
            }

            stopButton.addEventListener("click", function () {
                isStopped = true;
                clearTimeout(typingInterval);
                stopButton.style.display = "none";
                document.getElementById("restartButton").style.display = "block";
            });

            typingEffectContainer.innerHTML = "";
            typeLine();
        });

        // Restart button functionality
        restartButton.addEventListener("click", function () {
            location.reload();
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const textarea = document.querySelector(".scraped-data-box");
            if (textarea) {
                textarea.style.height = "auto"; 
                textarea.style.height = `${textarea.scrollHeight}px`; 
            }

            // Update favicon
            const faviconElement = document.getElementById("site-favicon");
            const url = "<%= url %>";
            if (url) {
                const domain = new URL(url).hostname;
                const size = 250;
                faviconElement.src = `https://www.google.com/s2/favicons?domain=${domain}&sz=${size}`;
            }
        });
    </script>
    
    
    <script>
        // Pass the data from the backend to the frontend
        const scrapedData = `<%- JSON.stringify(data) %>`; // Correctly pass the data as a valid JS object
        console.log("Scraped Data:", scrapedData); // Debugging log
    </script>
    
    <!-- External libraries -->
    <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://cdn.prod.website-files.com/67f2220a9e19e1e37a55ec03/js/webflow.a9ba356d.fac71e56d365963b.js" type="text/javascript"></script>
    <script>
        window.addEventListener('load', () => {
            const loader = document.getElementById("globalLoader");
            if (loader) {
                loader.style.opacity = "0";
                setTimeout(() => loader.style.display = "none", 400); // wait for fade-out
            }
        });
    </script>
    </body>
    </html>
